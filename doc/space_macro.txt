*space_macro.txt*      The Space Macro, for quick highlights       *space-macro*


                             SPACE MACRO MANUAL

1. Usage                                                  |space-macro-usage|
2. Customize mappings                                     |space-macro-mappings|
3. Customize matching                                     |space-macro-matching|

==============================================================================
1. USAGE ~
                                                             *space-macro-usage*

In normal mode, press <space> (the space key) to highlight the word under
your cursor. It relies on vim's search feature, so you can jump to the next
occurence of the highlighted word using N, etc.

In visual mode (when you are selecting text), press <space> to highglight your
selection.

==============================================================================
2. CUSTOMIZE MAPPINGS ~
                                                          *space-macro-mappings*

You can customize mappings by adding and customizing the following lines in
your .vimrc file:

>
  " The key combination that enables highlighting.
  let g:space_macro_on = '<space>'

  " The key combination that disables highlighting.
  let g:space_macro_off = '<leader><space>'
<

Leaving one of those variables empty will disable the keybinding.

==============================================================================
2. CUSTOMIZE MATCHING ~
                                                          *space-macro-matching*

In normal mode, by default, pressing space will only match occurences of the
same word. For example, highlighting 'foo' wouldn't match 'foobar'. This can be
changed in your .vimrc file:

>
  " Highlighting 'foo' won't match 'foobar'. The default.
  let g:space_macro_match_word_only = 1

  " Hihglighting 'foo' will match 'foobar'.
  let g:space_macro_match_word_only = 0
>

In visual mode, word matching is always disabled: selecting 'foo' and then
highlighting it will match the 'foo' in 'foobar'.

" vim: set expandtab sts=2 ts=2 sw=2 tw=78 ft=help norl:
